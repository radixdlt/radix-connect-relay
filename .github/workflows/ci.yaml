name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types:
      - prereleased # A release was created and identified as a pre-release.
      - released # A release was published, or a pre-release was changed to a release.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  pull-requests: write
  contents: read
  deployments: write
  packages: write

jobs:
  setup-tags:
    runs-on: ubuntu-latest
    steps:
      - uses: RDXWorks-actions/checkout@main
      - name: Docker tags
        id: tags
        uses: RDXWorks-actions/metadata-action@master
        with:
          images: |
            docker.io/radixdlt/radix-connect-relay
          tags: |
            type=sha,event=pr
            type=sha,event=branch
            type=semver,pattern={{version}}
    outputs:
      tags: ${{ steps.tags.outputs.tags }}
      labels: ${{ steps.tags.outputs.labels }}
      json: ${{ steps.tags.outputs.json }}

  build:
    runs-on: ubuntu-latest
    needs:
      - setup-tags
    steps:
      - uses: RDXWorks-actions/checkout@main

      - name: Use bun
        uses: oven-sh/setup-bun@194c60efc37fcfa5fa518543a35a9d2da5fe42a2
        with:
          bun-version: 1.0.x

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build --target=bun

      - name: Unit tests
        run: bun test

  snyk-scan-code:
    runs-on: ubuntu-latest
    steps:
      - uses: RDXWorks-actions/checkout@main
      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: 'arn:aws:iam::${{ secrets.SECRETS_ACCOUNT_ID }}:role/gh-common-secrets-read-access'
          app_name: 'radix-connect-relay'
          step_name: 'snyk-scan-code'
          secret_prefix: 'SNYK'
          secret_name: 'arn:aws:secretsmanager:eu-west-2:${{ secrets.SECRETS_ACCOUNT_ID }}:secret:github-actions/common/snyk-credentials-rXRpuX'
          parse_json: true
      - name: Run Snyk to check for code vulnerabilities
        uses: RDXWorks-actions/snyk-actions/node@master
        continue-on-error: true # temporary until code fix
        with:
          args: --all-projects --org=${{ env.SNYK_PROJECTS_ORG_ID }} --severity-threshold=high
          command: code test

  snyk-sbom:
    runs-on: ubuntu-latest
    needs:
      - snyk-scan-code
    permissions: write-all
    steps:
      - uses: RDXWorks-actions/checkout@main
      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: 'arn:aws:iam::${{ secrets.SECRETS_ACCOUNT_ID }}:role/gh-common-secrets-read-access'
          app_name: 'dashboard'
          step_name: 'snyk-sbom'
          secret_prefix: 'SNYK'
          secret_name: 'arn:aws:secretsmanager:eu-west-2:${{ secrets.SECRETS_ACCOUNT_ID }}:secret:github-actions/common/snyk-credentials-rXRpuX'
          parse_json: true
      - name: Generate SBOM # check SBOM can be generated but nothing is done with it
        uses: RDXWorks-actions/snyk-actions/node@master
        with:
          args: --all-projects --org=${{ env.SNYK_PROJECTS_ORG_ID }} --format=cyclonedx1.4+json --json-file-output sbom.json
          command: sbom
      - name: Upload SBOM
        if: github.event_name == 'release'
        uses: RDXWorks-actions/upload-release-assets@c94805dc72e4b20745f543da0f62eaee7722df7a
        with:
          files: sbom.json
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.event.release.tag_name }}

  push-docker-image:
    name: Docker
    needs:
      - setup-tags
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/docker-build.yml@main
    with:
      runs_on: ubuntu-latest
      image_registry: 'docker.io'
      image_organization: 'radixdlt'
      target: 'application'
      image_name: 'radix-connect-relay'
      tag: ${{ needs.setup-tags.outputs.tags }}
      context: '.'
      dockerfile: 'Dockerfile'
      platforms: 'linux/amd64'
      scan_image: true
      provenance: false
      snyk_target_ref: ${{ github.ref_name }}
      with_sbom: false
